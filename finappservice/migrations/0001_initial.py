# Generated by Django 3.1.4 on 2021-03-28 11:45

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import finappservice.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(max_length=255, unique=True)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('staffname', models.TextField(blank=True, null=True, verbose_name='staffname')),
                ('staffid', models.TextField(blank=True, null=True, verbose_name='staffid')),
                ('is_staff', models.BooleanField(default=True, verbose_name='is_staff')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='date_joined')),
                ('is_active', models.BooleanField(default=True, verbose_name='is_active')),
                ('is_teller', models.BooleanField(default=False, verbose_name='is_teller')),
                ('is_customer_service', models.BooleanField(default=False, verbose_name='is_customer_service')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'user',
            },
            managers=[
                ('objects', finappservice.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AccountType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('date_created', models.DateField(auto_now=True)),
            ],
            options={
                'db_table': 'account_type',
            },
        ),
        migrations.CreateModel(
            name='Branch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('branchcode', models.CharField(blank=True, max_length=255, null=True)),
                ('opening_date', models.DateField(auto_now=True)),
            ],
            options={
                'db_table': 'branch',
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('branchcode', models.CharField(blank=True, max_length=255, null=True)),
                ('customerId', models.CharField(blank=True, max_length=255, null=True)),
                ('firstname', models.CharField(max_length=255)),
                ('lastname', models.CharField(max_length=255)),
                ('mnemonic', models.CharField(max_length=100)),
                ('activationDate', models.CharField(blank=True, max_length=255, null=True)),
                ('submittedDate', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'customer',
            },
        ),
        migrations.CreateModel(
            name='TransactionHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transId', models.CharField(max_length=255)),
                ('transDate', models.CharField(max_length=255)),
                ('transAmount', models.FloatField()),
                ('senderName', models.CharField(blank=True, max_length=255)),
                ('senderAccount', models.CharField(blank=True, max_length=255)),
                ('receiverName', models.CharField(blank=True, max_length=255)),
                ('receiverAccount', models.CharField(blank=True, max_length=255)),
                ('comment', models.CharField(blank=True, max_length=255)),
            ],
            options={
                'db_table': 'transaction_history',
            },
        ),
        migrations.CreateModel(
            name='Twilio',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('smsName', models.TextField(default='twilio')),
                ('account_sid', models.TextField()),
                ('auth_token', models.TextField()),
            ],
            options={
                'db_table': 'twilio',
            },
        ),
        migrations.CreateModel(
            name='TellerTransactionHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transAmount', models.FloatField()),
                ('transAccount', models.CharField(max_length=100)),
                ('transType', models.CharField(max_length=100)),
                ('transDate', models.CharField(max_length=100)),
                ('tellerName', models.CharField(max_length=255)),
                ('teller', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'teller_transaction_history',
            },
        ),
        migrations.CreateModel(
            name='TellerBalance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tellerId', models.CharField(max_length=100)),
                ('openDate', models.CharField(max_length=100)),
                ('openBal', models.FloatField()),
                ('bal', models.FloatField(default='0')),
                ('closeDate', models.CharField(blank=True, max_length=100)),
                ('closeBal', models.FloatField(default='0')),
                ('totaltran', models.CharField(blank=True, max_length=255)),
                ('status', models.CharField(default='open', max_length=100)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'teller_balance',
            },
        ),
        migrations.CreateModel(
            name='Teller',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tellerId', models.CharField(max_length=100)),
                ('tellerName', models.CharField(max_length=255)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'teller',
            },
        ),
        migrations.CreateModel(
            name='LoanApplication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('loanId', models.CharField(max_length=255)),
                ('customerId', models.CharField(max_length=255)),
                ('accountNumber', models.CharField(max_length=255)),
                ('customerName', models.TextField()),
                ('loanAmount', models.FloatField()),
                ('dateApply', models.CharField(max_length=255)),
                ('loanOfficer', models.CharField(max_length=255)),
                ('loanType', models.CharField(max_length=255)),
                ('loanBal', models.FloatField()),
                ('loanStatus', models.CharField(max_length=255)),
                ('dateApprove', models.CharField(blank=True, max_length=255)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='finappservice.customer')),
            ],
            options={
                'db_table': 'loan_appliaction',
            },
        ),
        migrations.CreateModel(
            name='IdentificationId',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modeOfId', models.CharField(max_length=255)),
                ('idNo', models.CharField(max_length=255)),
                ('mnemonic', models.CharField(max_length=255)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ModeOfId', to='finappservice.customer')),
            ],
            options={
                'db_table': 'identification_id',
            },
        ),
        migrations.CreateModel(
            name='CustomerService',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('staffid', models.CharField(max_length=100)),
                ('staffname', models.CharField(max_length=255)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'customer_service',
            },
        ),
        migrations.CreateModel(
            name='Addresstable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('addressLine', models.TextField(blank=True, null=True)),
                ('street', models.TextField(blank=True, null=True)),
                ('landmark', models.TextField(blank=True, null=True)),
                ('country', models.TextField(blank=True, null=True)),
                ('state', models.TextField(blank=True, null=True)),
                ('district', models.TextField(blank=True, null=True)),
                ('mobileNo', models.TextField(blank=True, null=True)),
                ('mnemonic', models.TextField(blank=True, null=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='address', to='finappservice.customer')),
            ],
            options={
                'db_table': 'addresstable',
            },
        ),
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customerId', models.CharField(max_length=255)),
                ('mnemonic', models.CharField(max_length=255)),
                ('accountName', models.TextField()),
                ('accounNumber', models.CharField(max_length=255)),
                ('previousBalance', models.FloatField()),
                ('workingBalance', models.FloatField()),
                ('accountTypeId', models.IntegerField()),
                ('accountType', models.CharField(max_length=255)),
                ('active', models.BooleanField()),
                ('createdBy', models.CharField(max_length=255)),
                ('openOn', models.CharField(max_length=255)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='finappservice.customer')),
            ],
            options={
                'db_table': 'account',
            },
        ),
    ]
